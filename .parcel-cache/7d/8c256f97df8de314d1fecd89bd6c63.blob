var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactRouterDom = require('react-router-dom');
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _querystring = require('querystring');
  var _querystringDefault = _parcelHelpers.interopDefault(_querystring);
  require('@material-ui/core/Button');
  require('@material-ui/core/MenuItem');
  var _jsxFileName = "D:\\my applications\\notepad\\src\\screens\\home.jsx";
  class home extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        notepad: '',
        title: ''
      };
      this.addNew = this.addNew.bind(this);
      this.mynotes = this.mynotes.bind(this);
      this.updatenote = this.Editnote.bind(this);
    }
    async componentDidMount() {
      const {location} = this.props;
      const {search} = location;
      const queryParams = _querystringDefault.default.parse(search.slice(1));
      if (queryParams.admissionsId) ;
      {
        const {data} = await _axiosDefault.default.get(`http://localhost:4000/notepad/${queryParams.notepadId}`);
        this.setState({
          notepadId: queryParams.notepadId,
          note: data.value.note,
          title: data.value.title
        });
      }
    }
    async mynotes() {
      const {history} = this.props;
      history.push('/Display');
    }
    async addNew() {
      const {note, title} = this.state;
      await _axiosDefault.default.post('http://localhost:4000/notepad', {
        note,
        title
      });
    }
    async updatenote() {
      const {history} = this.props;
      const {notepadId, title, note} = this.state;
      await _axiosDefault.default.put(`http://localhost:4000/notepad/${notepadId}`, {
        title,
        note
      });
      history.push('/display');
    }
    render() {
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 66,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "text",
          placeholder: " Title",
          onChange: event => this.setState(prev => ({
            title: event.target.value
          })),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 67,
            columnNumber: 18
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("textarea", {
          placeholder: "note",
          rows: "30",
          cols: "100",
          onChange: event => this.setState(prev => ({
            note: event.target.value
          })),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75,
            columnNumber: 23
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("button", {
          type: "button",
          onClick: this.addNew,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 85,
            columnNumber: 17
          }
        }, "save note"), /*#__PURE__*/_reactDefault.default.createElement("button", {
          type: "button",
          onClick: this.mynotes,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 86,
            columnNumber: 17
          }
        }, "saved notes"), /*#__PURE__*/_reactDefault.default.createElement("button", {
          type: "button",
          onClick: this.updatenote,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 87,
            columnNumber: 17
          }
        }, "Edit note"))
      );
    }
  }
  exports.default = _reactRouterDom.withRouter(home);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
